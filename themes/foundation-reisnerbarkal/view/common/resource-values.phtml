<?php
$translate = $this->plugin('translate');
$escape = $this->plugin('escapeHtml');
$labelInfo = $this->setting('property_label_information');
?>
<!-- Build a table to show the image and its transcript. The image is duplicated because it's difficult to separate the pdf from the base item media.
Next add some table entries for the previous and next page areas. These are item properties that are moved with JS down below -->
<div>
    <table id='transcription-table' class="transcription-table" style="border-collapse: unset;">
        <tr>
            <td class="transcription-img1" style="min-width: 500px;">
                <?php echo $img;?>
            </td>
            <td class="transcription-img2" style="min-width: 500px;">
                <?php echo $img;?>
            </td>
        </tr>
        <tr>
            <td id='previous-page'></td>
            <td id='next-page' style="
            text-align: right;">
            </td>
        </tr>
    </table>
</div>
<style type="text/css">
    /* Turning off the border and shadow at a higher level didn't work so a style tag was added */
   .resource.show .media-render > a:only-child {
        border: none;
        -webkit-box-shadow: 0 0 0 0px rgb(255, 255, 255);
        box-shadow: 0 0 0 0px rgb(255, 255, 255);}

</style>
<dl>
<?php foreach ($values as $term => $propertyData): ?>
    <?php
    // Add IDs to the html tags so they can be found directly later.
        $propertyLabel = preg_replace('/(\w+:)(?=\w)/','',$term); ?>
    <div class="property" id=<?php echo $propertyLabel ?>>
        <dt>
        <?php
            if ($propertyData['alternate_label']):
                echo $escape($propertyData['alternate_label']);
            else:
                echo $escape($translate($propertyData['property']->label())); 
            endif;?>
        <?php if ('term' === $labelInfo): ?>
        <span class="field-term">(<?php echo $escape($propertyData['property']->term()); ?>)</span>
        <?php elseif ('vocab' === $labelInfo): ?>
        <span class="field-term">(<?php echo $escape($propertyData['property']->vocabulary()->label()); ?>)</span>
        <?php endif; ?>
        </dt>
        <div class="values">

        <?php 
        foreach ($propertyData['values'] as $value): ?>
            <?php
            $valueType = $value->type();
            $class = ['value'];
            if ('resource' == $valueType || strpos($valueType, 'resource') !== false) {
                $class[] = 'resource';
                $class[] = $escape($value->valueResource()->resourceName());
            } elseif ('uri' == $valueType) {
                $class[] = 'uri';
            }
            if (!$value->isPublic()) {
                $class[] = 'private';
            }   
            ?>
            <dl class="<?
                echo implode(' ', $class); ?>" lang="<?php echo $escape($value->lang()); ?>">
                <?php
                    if ($language = $value->lang()) { ?>
                        <span class="language">
                            <?php echo $language; ?>
                        </span>
                    <?php };?> <!--close inner if -->
                    <?php echo $value->asHtml();?>
                
            </dl>
        <?php endforeach; ?>
        </div>
    </div>
<?php endforeach; ?>
</dl>
<script type="text/javascript">
// Hide the extra images since two sets are brought in.
var item_images1 = document.getElementsByClassName('transcription-img1')
var item_images2 = document.getElementsByClassName('transcription-img2')
if (item_images1 != null){
    item_images1[0].childNodes[2].hidden = true;
}
if (item_images2 != null){
    item_images2[0].childNodes[1].hidden = true;
}
// Move the properties to the transcription-table above and change the text
var prevPage = document.getElementById('previous-page')
var nextPage = document.getElementById('next-page')
var pageStart = document.getElementById('pageStart')
var pageEnd = document.getElementById('pageEnd')

if (pageStart != null){
    prevPage.append(pageStart)
    //T he text is buried so had to resort to childNodes
    prevPage.childNodes[0].childNodes[1].innerText = 'Previous Page' 
}
// hide the grey box if there is no value by setting bGC to white
else
    prevPage.style.backgroundColor = 'white'

if (pageEnd != null){
    nextPage.append(pageEnd)
    nextPage.childNodes[1].childNodes[1].innerText = 'Next Page'
}
else
    nextPage.style.backgroundColor = 'white'
</script>